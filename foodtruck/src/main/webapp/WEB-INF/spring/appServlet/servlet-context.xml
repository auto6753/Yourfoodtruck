<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/image/**" location="/resources/image/" />
	<resources mapping="/resources/js/**" location="/resources/js/" />
	<resources mapping="/resources/css/**" location="/resources/css/" />
	<resources mapping="firebase-messaging-sw.js" location="/" />


	<!-- upload path  -->
	<!-- <beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\Users\bon300-21\git\Yourfoodtruck\foodtruck\src\main\webapp\resources\image\upload\">
		</beans:constructor-arg>
	</beans:bean> -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\Users\bon300-22\git\Yourfoodtruck\foodtruck\src\main\webapp\resources\image\upload\">
		</beans:constructor-arg>
	</beans:bean>
	<!--upload 용량 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- CORS setting : https://spring.io/blog/2015/06/08/cors-support-in-spring-framework#xml-namespace -->
    <beans:import resource="cors-config.xml" />
	<context:component-scan
		base-package="com.food.project" />
	<interceptors>
		<interceptor>
			<mapping path="/customer/**" />
			<exclude-mapping path="/login/**" />
			<beans:bean id="commonInterceptor"
				class="com.food.project.interceptor.CommonInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/seller/**" />
			<exclude-mapping path="/login/**" />
			<exclude-mapping path="/seller/cuorder/**"/>
			<beans:bean id="sellerInterceptor"
				class="com.food.project.interceptor.SellerInterceptor" />
		</interceptor>
	</interceptors>
	<websocket:handlers allowed-origins="*">
		<websocket:mapping path="/m.seorder" handler="PaymentHandler"/>
		<websocket:sockjs/>
	</websocket:handlers>
	<beans:bean id="PaymentHandler" class="com.food.project.websocket.PaymentHandler"/>
</beans:beans>
