<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.food.project.mapper.PostMapper">
	
	<!-- 페이징용 sql문 -->
	<sql id="search">
		where post_class=#{post_class}
		and post_title like '%'||#{keyword}||'%'	
	</sql>
	<sql id="pagingHeader">
		select * from (
			select rownum rn, a.* from(
	</sql>
	<sql id="pagingFooter">
			) a
		) where rn between #{start} and #{end}
	</sql>
	<!-- 게시글 리스트 불러오기 -->
	<select id="getPostList" resultType="com.food.project.domain.PostVO">
		select post_code,to_char(post_regdate,'yyyy/mm/dd')as post_regdate, to_char(post_moddate,'yyyy/mm/dd')as post_moddate ,post_content,post_title,post_visit,post_url,post_class
		from post
		where post_class=#{post_class}
		order by post_regdate DESC
	<!-- 페이징 하고나서 페이지 불러오기 -->
	</select>
	<select id="allList" resultType="map" parameterType="map">
		<!-- 목록 조회 및 페이징 전체 쿼리 -->
		<include refid="pagingHeader"></include>
			select rownum,post_code,to_char(post_regdate,'yyyy/mm/dd')as post_regdate,
			to_char(post_moddate,'yyyy/mm/dd')as post_moddate ,
			post_content,post_title,post_visit,post_url,post_class
			from post
			<include refid="search"></include>
			order by post_regdate desc
		<include refid="pagingFooter"></include>
	</select>
	<!-- 조회수 -->
	<update id="updatePostvisit" parameterType="com.food.project.domain.PostVO">
		update post set post_visit = post_visit + 1 where post_code = #{post_code , jdbcType=VARCHAR}
		
	</update>
	
	<!-- 게시글 불러오기 -->
	<select id="getPost" resultType="com.food.project.domain.PostVO">
		select * from post where post_code=#{post_code , jdbcType=VARCHAR}
	</select>
	
	<!-- 게시글 등록하기 -->
	<insert id="insertPost" parameterType="com.food.project.domain.PostVO">
		insert into post(post_code,post_content,post_title,post_visit,post_url,post_class)
		values (concat(to_char(sysdate,'yymmdd'),to_char(post_sequence.NEXTVAL,'FM00000')),#{post_content},#{post_title},#{post_visit},#{post_url,jdbcType=VARCHAR},#{post_class})
	</insert>
	<!-- 상세보기정보 수정페이지로 넘기기 -->
	<select id="getSpecific" resultType="com.food.project.domain.PostVO">
		select * from post where post_code=#{post_code ,jdbcType=VARCHAR }
	</select>
	
	<!-- 게시글 수정하기 -->
	<update id="updatePost" parameterType="com.food.project.domain.PostVO">
		update post set post_moddate = sysdate, post_content=#{post_content},post_title=#{post_title} where post_code=#{post_code , jdbcType=VARCHAR}<!-- post_url=#{post_url} -->
	</update>

	<!-- 게시글 삭제하기 -->	
	<delete id="deletePost" parameterType="com.food.project.domain.PostVO" >
		delete from post where post_code=#{post_code}
	</delete>
	<delete id="deleteAnnounce">
		delete from post where post_class=1
	</delete>
	
	
	<!-- 댓글 등록하기 -->
	<select id="getReply" resultType="com.food.project.domain.ReplyVO">
		select * from post_reply where post_code=#{post_code} order by reply_num
	</select>
	
	<!-- 댓글 가져오기 -->	
	<insert id="insertReply" parameterType="com.food.project.domain.ReplyVO">
		insert into post_reply(post_code,reply_regdate,reply_content,reply_num)
		values(#{post_code},#{reply_regdate},#{reply_content},reply_seq.NEXTVAL)
	</insert>
	<!-- 총 게시물 갯수 가져오기 -->
	<select id="totalPage" resultType="map">
		select count(*) tot_page from post where post_class=#{post_class}
	</select>
	<select id="totalPage2" resultType="map" parameterType="map">
		select count(*) tot_page from post
		where post_class=#{post_class} and post_title like '%'||#{keyword}||'%'
	</select>
	<select id="getReview" resultType="com.food.project.domain.ReviewVO">
		select * from review where email = #{email}
	</select>
</mapper>